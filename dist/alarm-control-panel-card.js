class t extends HTMLElement{constructor(){super(),this.code_arm_required=!1,this.has_numeric_code=!1,this._entitiesReady=!1,this._previousAlarmState="disarmed",this._countdownTimerFunction=null,this._timerRadius=30,this._timerStrokeWidth=this._timerRadius/5,this._timerSize=2*(this._timerRadius+this._timerStrokeWidth),this._currentStateDuration=0,this._autoarm_action="",this._strokeWidth=0,this.attachShadow({mode:"open"}),this._icons={armed_away:"mdi:shield-lock",armed_custom_bypass:"mdi:security",armed_home:"mdi:shield-home",armed_night:"mdi:shield-home",disarmed:"mdi:shield-check",pending:"mdi:shield-outline",triggered:"hass:bell-ring"},this._entitiesReady=!1,this._previousAlarmState="disarmed",this._countdownTimerFunction=null,this._timerRadius=30,this._timerStrokeWidth=this._timerRadius/5,this._timerSize=2*(this._timerRadius+this._timerStrokeWidth),this._currentStateDuration=0}set hass(t){var e;const i=t.states[this._config.entity];if(i){this.myhass=t,this.code_arm_required=i.attributes.code_arm_required,this.has_numeric_code=!i.attributes.code_format||"number"==i.attributes.code_format,(null===(e=this.shadowRoot)||void 0===e?void 0:e.lastChild)||this._createCard();const n=this._confirmEntitiesReady();i.state==this._state&&this._entitiesReady==n||(this._previousAlarmState=this._state,this._state=i.state,this._entitiesReady=n,this._updateCardContent())}}_createCard(){var t,e;const i=this._config,n=document.createElement("ha-card");n.innerHTML=`\n      ${this._iconLabel()}\n      ${this._timerCanvas()}\n      ${i.title?'<div id="state-text"></div>':""}\n    `;const a=document.createElement("div");a.id="content",a.style.display=i.auto_hide?"none":"",a.innerHTML=`\n      ${this._actionButtons()}\n      ${this.has_numeric_code?`<ha-textfield id="input-code" label='${this._label("ui.card.alarm_control_panel.code")}'\n          type="password"></ha-textfield>`:""}\n      ${this._keypad()}\n    `,n.appendChild(this._style(null!==(t=i.style)&&void 0!==t?t:"")),n.appendChild(a),null===(e=this.shadowRoot)||void 0===e||e.appendChild(n),this._showCountdownTimer(!1),this._setupInput(),this._setupKeypad(),this._setupActions()}setConfig(t){if(!t.entity||"alarm_control_panel"!==t.entity.split(".")[0])throw new Error("Please specify an entity from alarm_control_panel domain.");if(t.show_override_if_not_ready&&!t.disable_arm_if_not_ready)throw new Error("Only specify show_override_if_not_ready if disable_arm_if_not_ready is enabled.");if(t.disable_arm_if_not_ready&&!t.confirm_entities)throw new Error("To use disable_arm_if_not_ready, you must specify a list of confirm_entities.");if(t.auto_enter){if(!t.auto_enter.code_length||!t.auto_enter.arm_action)throw new Error("Specify both code_length and arm_action when using auto_enter.");this._autoarm_action=t.auto_enter.arm_action}this._config=Object.assign({},t),this._config.states||(this._config.states=["arm_away","arm_home"]),this._config.scale||(this._config.scale="15px");const e=this.shadowRoot;(null==e?void 0:e.lastChild)&&e.removeChild(e.lastChild)}_updateCardContent(){var t,e,i,n,a,o,r,s,l,d;const c=this._config;c.show_countdown_timer&&this._previousAlarmState!=this._state&&("arming"==this._state||"pending"==this._state?null==this._countdownTimerFunction&&this._config.durations&&this._config.durations[this._state]&&0!=this._config.durations[this._state]&&(this._currentStateDuration=this._config.durations[this._state],this._showCountdownTimer(!0),this._doCountdownTimer(),this._countdownTimerFunction=setInterval(()=>this._doCountdownTimer(),1e3)):this._countdownTimerFunction&&(this._showCountdownTimer(!1),clearInterval(this._countdownTimerFunction),this._countdownTimerFunction=null)),this._updateReady();const h=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("state-icon");h&&h.setAttribute("icon",this._icons[this._state]||"mdi:shield-outline");const u=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById("badge-icon");u&&(u.className=this._state);const _=this._stateIconLabel(this._state),m=null===(i=this.shadowRoot)||void 0===i?void 0:i.getElementById("icon-label"),v=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById("icon-text");m&&v&&(""===_?m.style.display="none":(m.style.display="",_.length>5?m.className="label big":m.className="label",v.innerHTML=_));const b=null===(a=this.shadowRoot)||void 0===a?void 0:a.getElementById("arm-actions"),p=null===(o=this.shadowRoot)||void 0===o?void 0:o.getElementById("disarm-actions"),g="disarmed"===this._state;if(b&&(b.style.display=g?"":"none"),!c.hide_keypad&&this.has_numeric_code&&p&&(p.style.display=g?"none":""),c.auto_enter){const t=null===(r=this.shadowRoot)||void 0===r?void 0:r.getElementById("disarm");g?(c.confirm_entities&&c.disable_arm_if_not_ready&&!this._entitiesReady?this._autoarm_action="disabled":this._autoarm_action=c.auto_enter.arm_action,null===(s=this.shadowRoot)||void 0===s||s.querySelectorAll(".actions button").forEach(t=>{t.classList.remove("autoarm"),t.id===this._autoarm_action&&t.classList.add("autoarm")}),t&&t.classList.remove("autoarm")):(this._autoarm_action="disarm",t&&t.classList.add("autoarm"))}if(!this.code_arm_required){const t=null===(l=this.shadowRoot)||void 0===l?void 0:l.getElementById("keypad");!c.hide_keypad&&t&&(t.style.display=g?"none":"flex");const e=null===(d=this.shadowRoot)||void 0===d?void 0:d.getElementById("input-code");this.has_numeric_code&&e&&(e.style.display=g?"none":"")}}_showOverrideCheckbox(t){var e,i;const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById("overrideCheckbox"),a=null===(i=this.shadowRoot)||void 0===i?void 0:i.getElementById("overrideLabel");t?(n.style.visibility="visible",a.style.visibility="visible"):(n.checked=!1,n.style.visibility="hidden",a.style.visibility="hidden")}_updateReady(){var t,e,i,n,a,o;const r=this._config;let s;const l="state.alarm_control_panel."+this._state;s=this._label(l);let d=!1;if(r.confirm_entities&&"disarmed"===this._state)if(this._entitiesReady)s=s+" - "+this._label("ready"),r.disable_arm_if_not_ready&&(null===(t=this.shadowRoot)||void 0===t||t.querySelectorAll(".actions button").forEach(t=>{t.removeAttribute("disabled")}));else if(s=s+" - "+this._label("not_ready"),r.disable_arm_if_not_ready){d=null!==(e=r.show_override_if_not_ready)&&void 0!==e&&e;(null===(i=this.shadowRoot)||void 0===i?void 0:i.getElementById("overrideCheckbox")).checked?null===(n=this.shadowRoot)||void 0===n||n.querySelectorAll(".actions button").forEach(t=>{t.removeAttribute("disabled")}):null===(a=this.shadowRoot)||void 0===a||a.querySelectorAll(".actions button").forEach(t=>{t.setAttribute("disabled","true")})}if(this._showOverrideCheckbox(d),r.title){const t=null===(o=this.shadowRoot)||void 0===o?void 0:o.getElementById("state-text");t&&(t.innerHTML=s,t.className="state "+this._state)}}_actionButtons(){var t;let e="";return this._config.hide_keypad&&(e=`<div id="disarm-actions" class="actions">${this._actionButton("disarm")}</div>`),`\n      <div id="arm-actions" class="actions">\n        ${null===(t=this._config.states)||void 0===t?void 0:t.map(t=>""+this._actionButton(t)).join("")}\n      </div>\n      ${e}\n      <div id="override-option" class="override"><input name="Override" id="overrideCheckbox" type="checkbox" /><label id="overrideLabel" for="override">Override</label></div>`}_stateIconLabel(t){const e=t.split("_").pop();return"disarmed"!==e&&"triggered"!==e&&e?e:""}_iconLabel(){return'\n      <ha-label-badge-icon id="badge-icon">\n        <div class="badge-container" id="badge-container">\n          <div class="label-badge" id="badge">\n            <div class="value">\n              <ha-icon id="state-icon"/>\n            </div>\n            <div class="label" id="icon-label">\n              <span id="icon-text"/>\n            </div>\n          </div>\n        </div>\n    </ha-label-badge-icon>'}_timerCanvas(){return this._config.show_countdown_timer?`\n        <countdown-timer id='countdown'>\n          <canvas id="timerCanvas" width="${this._timerSize}" height="${this._timerSize}">\n            <span id="countdown-text" role="status"></span>\n          </canvas>\n        </countdown-timer>`:""}_actionButton(t){return`<button outlined id="${t}">\n      ${this._label("ui.card.alarm_control_panel."+t)}</button>`}_doCountdownTimer(){var t;const e=((new Date).getTime()-new Date(this.myhass.states[this._config.entity].last_changed).getTime())/1e3,i=this._currentStateDuration,n=Math.round(Math.max(i-e,0)),a=e/i,o=(null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("timerCanvas")).getContext("2d");if(!o)return;o.lineWidth=this._timerStrokeWidth,o.clearRect(0,0,this._timerSize,this._timerSize);const r=this._timerSize/2;o.fillStyle=a>.75?"red":a>.5?"orange":"#8ac575",o.beginPath(),o.arc(r,r,this._timerRadius,0,2*Math.PI,!1),o.fill();const s=3.5*Math.PI-2*Math.PI*a;o.beginPath(),o.arc(r,r,this._timerRadius,1.5*Math.PI,s,!1),o.strokeStyle="#477050",o.stroke();const l=this._timerRadius/1.2;o.font="700 "+l+"px sans-serif",o.lineWidth=this._strokeWidth,o.textAlign="center",o.textBaseline="middle",o.fillStyle="white",o.fillText(""+n,this._timerSize/2,this._timerSize/2)}_setupActions(){var t,e,i,n,a;if(this._config.auto_hide){const i=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("badge-icon");if(i){const t=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById("content");i.addEventListener("click",()=>{t&&("none"===t.style.display?t.style.display="":t.style.display="none")})}}null===(i=this.shadowRoot)||void 0===i||i.querySelectorAll(".actions button").forEach(t=>{t.addEventListener("click",()=>{var e;const i=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector("ha-textfield"),n=i?i.value:"";this._callService(t.id,n)})}),null===(a=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById("overrideCheckbox"))||void 0===a||a.addEventListener("change",()=>{this._updateReady()})}_callService(t,e){var i;const n=null===(i=this.shadowRoot)||void 0===i?void 0:i.querySelector("ha-textfield");this.myhass.callService("alarm_control_panel","alarm_"+t,{entity_id:this._config.entity,code:e}),n&&(n.value="")}_showCountdownTimer(t){var e,i;const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById("countdown"),a=null===(i=this.shadowRoot)||void 0===i?void 0:i.getElementById("badge-icon");this._config.show_countdown_timer?n&&(n.style.display=t?"":"none"):t=!1,a&&(a.style.display=t?"none":"")}_setupInput(){var t;if(this._config.auto_enter){const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("ha-textfield");null==e||e.addEventListener("input",()=>{this._autoEnter()})}}_setupKeypad(){var t,e;const i=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("ha-textfield");null===(e=this.shadowRoot)||void 0===e||e.querySelectorAll(".pad button").forEach(t=>{t.getAttribute("value")===this._label("ui.card.alarm_control_panel.clear_code")?t.addEventListener("click",()=>{i.value=""}):"disarm"===t.id?t.addEventListener("click",()=>{this._callService("disarm",i.value)}):t.addEventListener("click",()=>{i.value+=t.getAttribute("value"),this._autoEnter()})})}_autoEnter(){var t;if(this._config.auto_enter){const e=(null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("ha-textfield")).value;e.length==this._config.auto_enter.code_length&&"disabled"!=this._autoarm_action&&this._callService(this._autoarm_action,e)}}_keypad(){return this._config.hide_keypad||!this.has_numeric_code?"":`\n      <div id="keypad" class="pad">\n        <div>\n          ${this._keypadButton("1","")}\n          ${this._keypadButton("4","GHI")}\n          ${this._keypadButton("7","PQRS")}\n          ${this._keypadButton(this._label("ui.card.alarm_control_panel.clear_code"),"","clear")}\n        </div>\n        <div>\n          ${this._keypadButton("2","ABC")}\n          ${this._keypadButton("5","JKL")}\n          ${this._keypadButton("8","TUV")}\n          ${this._keypadButton("0","")}\n        </div>\n        <div>\n          ${this._keypadButton("3","DEF")}\n          ${this._keypadButton("6","MNO")}\n          ${this._keypadButton("9","WXYZ")}\n          <div id="disarm-actions">${this._actionButton("disarm")}</div>\n        </div>\n      </div>`}_confirmEntitiesReady(){if(!this._config.confirm_entities)return!0;for(let t=0;t<this._config.confirm_entities.length;t++)if("off"!=this.myhass.states[this._config.confirm_entities[t]].state)return!1;return!0}_keypadButton(t,e,i=""){let n="";return this._config.display_letters&&(n=`<div class='alpha'>${e}</div>`),""==i&&(i=t),`<button id="key${i}" value="${t}">${t}${n}</button>`}_style(t){const e=document.createElement("style");return e.textContent=`\n      ha-card {\n        position: relative;\n        padding-bottom: 32px;\n        --alarm-color-disarmed: var(--label-badge-green);\n        --alarm-color-pending: var(--label-badge-yellow);\n        --alarm-color-triggered: var(--label-badge-red);\n        --alarm-color-armed: var(--label-badge-red);\n        --alarm-color-autoarm: rgba(0, 153, 255, .1);\n        --alarm-state-color: var(--alarm-color-armed);\n        --base-unit: ${this._config.scale};\n        font-size: calc(var(--base-unit));\n        ${t}\n      }\n      ha-icon {\n        color: var(--alarm-state-color);\n        width: 24px;\n        height: 24px;\n      }\n      countdown-timer {\n        position: absolute;\n        right: 12px;\n        top: 12px;\n      }\n      ha-label-badge-icon {\n        --ha-label-badge-color: var(--alarm-state-color);\n        --label-badge-text-color: var(--alarm-state-color);\n        --label-badge-background-color: var(--paper-card-background-color);\n        color: var(--alarm-state-color);\n        position: absolute;\n        right: 12px;\n        top: 12px;\n      }\n      .badge-container {\n        display: inline-block;\n        text-align: center;\n        vertical-align: top;\n      }\n      .label-badge {\n        position: relative;\n        display: block;\n        margin: 0 auto;\n        width: var(--ha-label-badge-size, 2.5em);\n        text-align: center;\n        height: var(--ha-label-badge-size, 2.5em);\n        line-height: var(--ha-label-badge-size, 2.5em);\n        font-size: var(--ha-label-badge-font-size, 1.5em);\n        border-radius: 50%;\n        border: 0.1em solid var(--ha-label-badge-color, var(--primary-color));\n        color: var(--label-badge-text-color, rgb(76, 76, 76));\n        white-space: nowrap;\n        background-color: var(--label-badge-background-color, white);\n        background-size: cover;\n        transition: border 0.3s ease-in-out;\n      }\n      .label-badge .value {\n        font-size: 90%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .label-badge .value.big {\n        font-size: 70%;\n      }\n      .label-badge .label {\n        position: absolute;\n        bottom: -1em;\n        /* Make the label as wide as container+border. (parent_borderwidth / font-size) */\n        left: -0.2em;\n        right: -0.2em;\n        line-height: 1em;\n        font-size: 0.5em;\n      }\n      .label-badge .label span {\n        box-sizing: border-box;\n        max-width: 100%;\n        display: inline-block;\n        background-color: var(--ha-label-badge-color, var(--primary-color));\n        color: var(--ha-label-badge-label-color, white);\n        border-radius: 1em;\n        padding: 9% 16% 8% 16%; /* mostly apitalized text, not much descenders => bit more top margin */\n        font-weight: 500;\n        overflow: hidden;\n        text-transform: uppercase;\n        text-overflow: ellipsis;\n        transition: background-color 0.3s ease-in-out;\n        text-transform: var(--ha-label-badge-label-text-transform, uppercase);\n      }\n      .label-badge .label.big span {\n        font-size: 90%;\n        padding: 10% 12% 7% 12%; /* push smaller text a bit down to center vertically */\n      }\n      .badge-container .title {\n        margin-top: 1em;\n        font-size: var(--ha-label-badge-title-font-size, 0.9em);\n        width: var(--ha-label-badge-title-width, 5em);\n        font-weight: var(--ha-label-badge-title-font-weight, 400);\n        overflow: hidden;\n        text-overflow: ellipsis;\n        line-height: normal;\n      }\n      .disarmed {\n        --alarm-state-color: var(--alarm-color-disarmed);\n      }\n      .triggered {\n        --alarm-state-color: var(--alarm-color-triggered);\n        animation: pulse 1s infinite;\n      }\n      .arming {\n        --alarm-state-color: var(--alarm-color-pending);\n        animation: pulse 1s infinite;\n      }\n      .pending {\n        --alarm-state-color: var(--alarm-color-pending);\n        animation: pulse 1s infinite;\n      }\n      ha-textfield {\n        display: block;\n        text-align: center;\n        margin: auto;\n        max-width: 150px;\n        --mdc-typography-subtitle1-font-size: 24px;\n      }\n      .state {\n        margin-left: 20px;\n        font-size: calc(var(--base-unit) * 1);\n        position: relative;\n        bottom: 16px;\n        color: var(--alarm-state-color);\n        animation: none;\n      }\n      .pad {\n        display: flex;\n        justify-content: center;\n      }\n      .pad div {\n        display: flex;\n        flex-direction: column;\n      }\n      .pad button {\n        position: relative;\n        padding: calc(var(--base-unit)*0.5);\n        font-size: calc(var(--base-unit) * 1.6);\n        font-weight: 700;\n        width: calc(var(--base-unit) * 8);\n        height: calc(var(--base-unit) * 5);\n        margin: 8px;\n        background-color: var(--primary-background-color);\n        border-width: 2px;\n        border-style: solid;\n        border-color: var(--primary-color);\n        border-radius: 4px;\n        #color: var(--primary-color);\n        color: var(--primary-text-color);\n      }\n      .pad .autoarm {\n        background: var(--alarm-color-autoarm) !important;\n      }\n\n      .pad button:focus {\n        border-color: var(--dark-primary-color);\n        outline: none;\n      }\n      .pad button#disarm {\n        border-color: var(--primary-text-color);\n        background-color: var(--primary-color);\n        font-size: calc(var(--base-unit) * 1.1);\n      }\n      .pad button#keyclear {\n        border-color: red;\n        font-size: calc(var(--base-unit) * 1.1);\n        background-color: var(--primary-background-color);\n      }\n      .actions {\n        margin: 0 8px;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        font-size: calc(var(--base-unit) * 1);\n      }\n      .override {\n        margin-top: 12px;\n        text-align: center;\n        font-size: calc(var(--base-unit) * 1.2);\n      }\n      .override label {\n        padding-left: 4px;\n      }\n      .actions button {\n        font-size: calc(var(--base-unit) * 1.5);\n        font-weight: 700;\n        width: calc(var(--base-unit) * 11);\n        height: calc(var(--base-unit) * 6);\n        margin-top: 0px;\n        margin-right: 12px;\n        margin-bottom: 0px;\n        margin-left: 12px;\n        border-width: 2px;\n        border-style: solid;\n        border-color: var(--primary-text-color);\n        background-color: var(--primary-color);\n        color: var(--primary-text-color);\n      }\n      button:disabled,\n      button[disabled] {\n        background-color: #cccccc;\n        color: #666666;\n      }\n      .actions .autoarm {\n        background: var(--alarm-color-autoarm) !important;\n      }\n      button#disarm {\n        color: var(--google-red-500);\n      }\n      .alpha {\n        position: absolute;\n        text-align: center;\n        bottom: calc(var(--base-unit) * 0.1);\n        color: var(--secondary-text-color);\n        font-size: calc(var(--base-unit) * 0.7);\n      }\n    `,e}_label(t,e){if(this._config.show_label_ids)return t;if(this._config.labels&&this._config.labels[t])return this._config.labels[t];const i=this.myhass.selectedLanguage||this.myhass.language,n=this.myhass.resources[i];if(n&&n[t])return n[t];if(e)return e;const a=t.split(".").pop();return null==a?void 0:a.split("_").join(" ").replace(/^\w/,t=>t.toUpperCase())}getCardSize(){return 1}}customElements.define("alarm_control_panel-card",t);
